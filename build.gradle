apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.lucene', name: 'lucene-core', version: '6.4.0'
    compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '6.4.0'
    compile group: 'org.apache.lucene', name: 'lucene-queryparser', version: '6.4.0'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
    // https://mvnrepository.com/artifact/com.sangupta/jopensurf
    compile group: 'com.sangupta', name: 'jopensurf', version: '1.0.0'
    // https://mvnrepository.com/artifact/com.drewnoakes/metadata-extractor
    compile group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.9.1'
    // compile group: 'com.drewnoakes', name: 'metadata-extractor', version: '2.3.1'

    // https://mvnrepository.com/artifact/org.bytedeco.javacpp-presets/opencv
    // compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '2.4.11-0.11'
    compile fileTree(dir: 'lib', include: '*.jar')
    // runtime fileTree(dir: 'lib', include: '*.jar')
}

task runDemo(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'liredemo.LireDemoFrame'
}

task distributionJar(type: Jar) {
    manifest {
        attributes "Main-Class": "liredemo.LireDemoFrame"
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}